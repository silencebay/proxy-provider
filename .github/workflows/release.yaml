name: Build

# Controls when the workflow will run
on:
  push:
    branches:
      - "main"
      - "dev"
    tags:
      - "v*.*.*"
  pull_request:
    branches:
      - "main"
      - "dev"
  workflow_dispatch:

# permissions are needed if pushing to ghcr.io
permissions:
  packages: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Get the repository's code
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
      # https://github.com/docker/setup-qemu-action
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3
      # Setup the Github Actions cache.
      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildxarch-release-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildxarch-release-
      - name: Login to GHCR
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Docker meta
        id: meta # you'll use this in the next step
        uses: docker/metadata-action@v4
        with:
          # list of Docker images to use as base name for tags
          images: |
            ghcr.io/${{ github.repository }}
          # Docker tags based on the following events/attributes
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            # type=sha
      # the arm64 is of course much slower due to qemu, so build and push amd64 **first**
      # due to the way manifests work, the gap between this and the complete push below
      #  could result in pull failures or inconsistencies for arm64, such is life.
      # further duplicated by building both release and debug builds
      - name: Build and push amd64 Release Docker Image to Github docker registry
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          # cache-from: type=local,src=/tmp/.buildx-cache
          # first run does not export the cache
      # Do it all again with both archs. the amd64 will be a huge cache hit
      # this will update the manifest have both arches
      - name: Build and push multiarch Release Docker Image to Github docker registry
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/arm64,linux/amd64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          # cache-from: type=local,src=/tmp/.buildx-cache
          # cache-to: type=local,dest=/tmp/.buildx-cache
